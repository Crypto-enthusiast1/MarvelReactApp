{"version":3,"file":"static/js/491.97134045.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appRandomHero/appRandomHero.js","components/appHeroesList/appHeroesList.js","components/errorBoundary/ErrorBoundary.js","components/appHeroInfo/appHeroInfo.js","resources/img/hummerUp.svg","components/appFindHeroByName/appFindHeroByName.js","components/pages/MainPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import errorImg from './giphy.webp'\r\nimport './errorMessage.scss'\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img src={errorImg} alt='error' className='error' />\r\n   )\r\n};\r\n\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react'\r\nimport './appRandomHero.scss'\r\nimport '../../style/button.scss'\r\nimport Loading from '../spiner/Spiner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport mjolnir from '../../resources/img/mjolnir.png'\r\nimport shield from '../../resources/img/shield.png'\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../services/MarvelService'\r\n\r\nconst RandomHero = (props) => {\r\n\r\n   const { getHeroById, clearError, process, setProcess } = useMarvelService();\r\n   const [hero, setHero] = useState({});\r\n\r\n   useEffect(() => {\r\n      setProcess('loading')\r\n      updateHero()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n   const updateHero = () => {\r\n      setProcess('loading')\r\n      getHeroById().then(res => {\r\n         props.onHeroLoad(res)\r\n         if (!res.description) {\r\n            res.description = 'There is no data about this character.';\r\n         } else if (res.description && res.description.length > 228) {\r\n            res.description = res.description.slice(0, 228) + '...'\r\n         }\r\n         setHero(res);\r\n         clearError();\r\n      }).then(() => setProcess('confirmed'))\r\n   }\r\n\r\n   const setContent = (process, hero) => {\r\n      switch (process) {\r\n         case 'waiting':\r\n         case 'loading':\r\n            return <Loading />\r\n         case 'confirmed':\r\n            return <View hero={hero} />\r\n         case 'error':\r\n            return <ErrorMessage />\r\n         default:\r\n            throw new Error(\"Quelque chose s'est mal passe\")\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"randomHero\">\r\n         {setContent(process, hero)}\r\n         <div className=\"heroToday\">\r\n            <div>Random character for today! <br />\r\n               Do you want to get to know him better?</div>\r\n            <div>Or choose another one</div>\r\n            <button className=\"button button__main\" onClick={updateHero}>\r\n               <div className=\"inner\">TRY IT</div>\r\n            </button>\r\n            <img src={shield} alt='shield' className='shield'></img>\r\n            <img src={mjolnir} alt='mjolnir' className='mjolnir'></img>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst View = ({ hero }) => {\r\n\r\n   const { thumbnail, name, description, homepage, wiki } = hero\r\n\r\n   return (\r\n      <div className=\"heroBlockInfo\">\r\n         <img src={thumbnail} alt='hero'></img>\r\n         <div className=\"wrapper\">\r\n            <h1 className='heroName'>{name}</h1>\r\n            <div className=\"heroDescription\">{description}</div>\r\n            <div className=\"btns\">\r\n               <a href={homepage} className=\"button button__main\">\r\n                  <div className=\"inner\">HOMEPAGE</div>\r\n               </a>\r\n               <a href={wiki} className=\"button button__secondary\">\r\n                  <div className=\"inner\">WIKI</div>\r\n               </a>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nRandomHero.propTypes = {\r\n   onHeroLoad: PropTypes.func,\r\n}\r\n\r\nexport default RandomHero;","import { useEffect, useState, useMemo } from 'react'\r\nimport './appHeroesList.scss'\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Loading from '../spiner/Spiner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport PropTypes from 'prop-types'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst Heroeslist = (props) => {\r\n\r\n   const [heroes, setHeroes] = useState([]);\r\n   const [nineHeroLoading, setNineHeroLoading] = useState(false);\r\n   const [offset, setOffset] = useState(210);\r\n   const [noMoreHeroesInDataFromServer, setNoMoreHeroesInDataFromServer] = useState(false);\r\n   const [firstLoadNineHero, setFirstLoadNineHero] = useState(true)\r\n   const [animatedHeroes, setAnimatedHeroes] = useState([]);\r\n\r\n   const { clearError, getAllHeroes, process, setProcess } = useMarvelService();\r\n\r\n   useEffect((offset) => {\r\n      onLoadNineNewHeroes(offset)\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n\r\n   const preLoad = () => {\r\n      const arrayLoading = [];\r\n      for (let i = 0; i < 9; i++) {\r\n         arrayLoading.push(<Skeleton variant=\"rectangular\" width={200} height={320} animation=\"wave\" key={i} />)\r\n      }\r\n      return arrayLoading\r\n   }\r\n\r\n   const onChangeActivehero = (id) => {\r\n      const updatedHeroes = heroes.map(hero => {\r\n         return hero.id === id ? { ...hero, active: true } : { ...hero, active: false }\r\n      });\r\n      setHeroes(updatedHeroes)\r\n   }\r\n\r\n   const renderNineNewHeroes = (heroes) => {\r\n      return heroes.map(item => {\r\n         let imgStyle = { 'objectFit': 'cover' };\r\n         const classActive = item.active ? 'hero_item hero_item_selected' : 'hero_item';\r\n         if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = { 'objectFit': 'unset' };\r\n         }\r\n\r\n         const handleClick = () => {\r\n            props.onCharSelected(item.id);\r\n            onChangeActivehero(item.id);\r\n         };\r\n\r\n         const handleKeyDown = (event) => {\r\n            if (event.key === 'Enter' || event.key === ' ') {\r\n               handleClick();\r\n            }\r\n         };\r\n\r\n         const isAnimated = animatedHeroes.includes(item.id);\r\n\r\n         return (\r\n            <motion.li\r\n               initial={!isAnimated ? { opacity: 0, scale: 0.5 } : {}}\r\n               animate={!isAnimated ? { opacity: 1, scale: 1 } : {}}\r\n               transition={{ duration: 0.2, delay: 0.2 }}\r\n               className={classActive}\r\n               key={item.id}\r\n               tabIndex=\"0\"\r\n               onClick={handleClick}\r\n               onKeyDown={handleKeyDown}\r\n               onAnimationComplete={() => {\r\n                  if (!isAnimated) {\r\n                     setAnimatedHeroes(prev => [...prev, item.id]);\r\n                  }\r\n               }}\r\n            >\r\n               <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n               <div className=\"hero_name\">{item.name}</div>\r\n            </motion.li>\r\n         );\r\n      });\r\n   }\r\n\r\n   const onLoadNineNewHeroes = (offset) => {\r\n      firstLoadNineHero ? setNineHeroLoading(false) : setNineHeroLoading(true)\r\n      getAllHeroes(offset).then(res => {\r\n         if (res.length < 9) {\r\n            setNoMoreHeroesInDataFromServer(true);\r\n         }\r\n         const newNineHero = res.map(hero => ({\r\n            ...hero, active: false\r\n         }))\r\n         setHeroes(prevHeroes => [...prevHeroes, ...newNineHero]);\r\n         setNineHeroLoading(false)\r\n         setFirstLoadNineHero(false)\r\n         clearError()\r\n         setOffset(prevOffset => prevOffset + 9)\r\n      }).then(() => setProcess('confirmed'));\r\n   }\r\n\r\n   const buttonRender = () => {\r\n      return (\r\n         <button className=\"button button__main button__long\" onClick={() => onLoadNineNewHeroes(offset + 9)}>\r\n            <div className=\"inner\">load more</div>\r\n         </button>\r\n      )\r\n   }\r\n\r\n   const setContent = (process, Component) => {\r\n      switch (process) {\r\n         case 'waiting':\r\n         case 'loading':\r\n            return firstLoadNineHero ? preLoad() : <Component />\r\n         case 'confirmed':\r\n            return renderNineNewHeroes(heroes)\r\n         case 'error':\r\n            return <ErrorMessage />\r\n         default:\r\n            throw new Error(\"Quelque chose s'est mal passe\")\r\n      }\r\n   }\r\n\r\n   const content = useMemo(() => {\r\n      return setContent(process, () => renderNineNewHeroes(heroes))\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [process, heroes])\r\n\r\n   let newNineHero = nineHeroLoading ? <Loading /> : buttonRender();\r\n\r\n   if (noMoreHeroesInDataFromServer) {\r\n      newNineHero = null\r\n   }\r\n   return (\r\n      <div className=\"heroes_list\" >\r\n         <ul className=\"heroes_grid\">\r\n            {content}\r\n         </ul>\r\n         {newNineHero}\r\n      </div>\r\n   )\r\n\r\n}\r\n\r\nHeroeslist.propTypes = {\r\n   onCharSelected: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Heroeslist;","import { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false, errorInfo: null };\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      this.setState({ hasError: true, errorInfo });\r\n      console.log(error, errorInfo);\r\n   }\r\n\r\n   render() {\r\n      if (this.state.hasError) {\r\n         return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/* eslint-disable array-callback-return */\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Loading from '../spiner/Spiner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport PropTypes from 'prop-types';\r\nimport './appHeroInfo.scss';\r\n\r\nconst AppHeroInfo = (props) => {\r\n\r\n   const [hero, setHero] = useState({});\r\n   const [firstRenderDone, setFirstRenderDone] = useState(false);\r\n   const { clearError, getHeroWithComicsById, process, setProcess } = useMarvelService();\r\n   const { randomHero, charId } = props;\r\n\r\n   useEffect(() => {\r\n      if (randomHero) {\r\n         checkAndRender();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [randomHero])\r\n\r\n   useEffect(() => {\r\n      if (charId) {\r\n         updateHeroInfo(charId);\r\n         renderComics()\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [charId])\r\n\r\n   const checkAndRender = () => {\r\n      const { randomHero } = props;\r\n      if (!firstRenderDone && randomHero && Object.keys(randomHero).length > 0) { //Обязательно проверять не пустой ли приходит объект randomHero\r\n         setProcess('loading')\r\n         setHero({ ...randomHero });\r\n         setFirstRenderDone(true);\r\n         setProcess('confirmed')\r\n      }\r\n   };\r\n\r\n   const onError = () => {\r\n      return (\r\n         <div className=\"aboutComicsHero\">\r\n            <div className=\"wrapper_error\" >\r\n               <ErrorMessage />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const onLoading = () => {\r\n      return (\r\n         <div className=\"aboutComicsHero\">\r\n            <div className=\"wrapper wrapper_loading\" style={{ justifyContent: 'center', display: 'unset' }}>\r\n               <Loading />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const updateHeroInfo = (id) => {\r\n      if (!id) {\r\n         return\r\n      }\r\n      getHeroWithComicsById(id).then(item => {\r\n         if (!item.description) {\r\n            item.description = 'There is no data about this character.'\r\n         } else if (item.description && item.description.length > 228) {\r\n            item.description = item.description.slice(0, 228) + '...'\r\n         }\r\n         clearError();\r\n         setHero({ ...item });\r\n      }).then(() => setProcess('confirmed'))\r\n         .catch(onError)\r\n   }\r\n\r\n   const renderComics = () => {\r\n      const { comics } = hero;\r\n      if (!comics || comics.length === 0) {\r\n         return <li>They are no comics avaible about this hero</li>\r\n      }\r\n      return comics.map((item, i) => {\r\n         if (i > 9) return null;\r\n         return (<a href={item.resourceURI} key={i}>\r\n            <li>{item.name}</li>\r\n         </a>\r\n         )\r\n      })\r\n   }\r\n\r\n   const setContent = (process, hero) => {\r\n      switch (process) {\r\n         case 'waiting':\r\n         case 'loading':\r\n            return onLoading()\r\n         case 'confirmed':\r\n            return <View hero={hero} comics={renderComics} />\r\n         case 'error':\r\n            return onError()\r\n         default:\r\n            throw new Error(\"Quelque chose s'est mal passe\")\r\n      }\r\n   }\r\n\r\n   return (\r\n      <Fragment>\r\n         {setContent(process, hero)}\r\n      </Fragment>\r\n   )\r\n}\r\n\r\nconst View = ({ hero, comics }) => {\r\n\r\n   const { thumbnail, name, description, homepage, wiki } = hero;\r\n   let imgStyle = { objectFit: 'cover' }\r\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n      imgStyle = { 'objectFit': 'unset' };\r\n   }\r\n\r\n   const content = comics();\r\n\r\n   return (\r\n      <div className=\"aboutComicsHero\">\r\n         <div className=\"wrapper\" >\r\n            <img src={thumbnail} alt='hero' style={imgStyle}></img>\r\n            <h1 className='heroName'>{name}</h1>\r\n            <a href={homepage} className=\"button button__main\">\r\n               <div className=\"inner\">HOMEPAGE</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n               <div className=\"inner\">WIKI</div>\r\n            </a>\r\n         </div>\r\n         <div className=\"heroDescription\">{description}</div>\r\n\r\n         <h2 className=\"comics\">Comics:</h2>\r\n         <ul>\r\n            {content}\r\n         </ul>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nAppHeroInfo.propTypes = {\r\n   charId: PropTypes.number,\r\n   randomHero: PropTypes.object,\r\n}\r\n\r\nexport default AppHeroInfo;","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgHummerUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    id: \"mjolnir\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"11 1 53 1 60 8 60 22 53 29 11 29 4 22 4 8 11 1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.41,30H10.59L3,22.41V7.59L10.59,0H53.41L61,7.59V22.41Zm-42-2H52.59L59,21.59V8.41L52.59,2H11.41L5,8.41V21.59Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"7 9 11 5 11 25 7 21 7 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12,27.41l-6-6V8.59l6-6ZM8,20.59l2,2V7.41l-2,2Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"57 9 53 5 53 25 57 21 57 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52,27.41V2.59l6,6V21.41Zm2-20V22.59l2-2V9.41Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"50 27 39.59 27 37.59 25 26.41 25 24.41 27 14 27 14 25 23.59 25 25.59 23 38.41 23 40.41 25 50 25 50 27\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 8,\n    height: 25,\n    x: 28,\n    y: 29,\n    fill: \"#d21f23\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37,55H27V28H37Zm-8-2h6V30H29Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"gray\",\n    d: \"M36,63H28c-1.38,0-2.27-.91-2-2l2-7h8l2,7C38.27,62.09,37.38,63,36,63Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36,64H28a3.15,3.15,0,0,1-2.53-1.12A2.43,2.43,0,0,1,25,60.76L27.25,53h9.51L39,60.73a2.45,2.45,0,0,1-.43,2.16A3.15,3.15,0,0,1,36,64Zm-7.25-9L27,61.27a.43.43,0,0,0,.08.38A1.21,1.21,0,0,0,28,62h8a1.21,1.21,0,0,0,1-.35.45.45,0,0,0,.07-.41L35.25,55Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 32.5,\n    transform: \"rotate(-31.8 32.146 33.419)\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 41.5,\n    transform: \"rotate(-31.8 32.18 42.428)\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 49.5,\n    transform: \"rotate(-31.8 32.216 50.438)\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHummerUp);\nexport default __webpack_public_path__ + \"static/media/hummerUp.d29ad872de0e39c47a0cadb891e73fb0.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\r\nimport * as Yup from 'yup'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { Link } from 'react-router-dom'\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './appFindHeroByName.scss'\r\n\r\n\r\nconst FindHeroByName = () => {\r\n   const [char, setChar] = useState(null);\r\n   const { getHeroByName } = useMarvelService();\r\n\r\n   const getHero = (name) => {\r\n      getHeroByName(name).then(res => {\r\n         setChar(res)\r\n      })\r\n   }\r\n\r\n   const result = !char ? null : char.length > 0 ?\r\n      <div className='newHero'>\r\n         {`There is! Visit ${char[0].name} page?`}\r\n         <Link className=\"button button__secondary\" to={`/${char[0].name}`}>\r\n            <div className=\"inner\">TO PAGE</div>\r\n         </Link>\r\n      </div> : <div className='errorMessage'>The character was not found. Check the name and try again</div>\r\n\r\n   return (\r\n      <div className='findHero'>\r\n         <Formik\r\n            initialValues={{ name: '' }}\r\n            validationSchema={Yup.object({\r\n               name: Yup.string()\r\n                  .min(2, 'Minimum 2 symbol')\r\n                  .required('This field is required ')\r\n            })}\r\n            onSubmit={({ name }) => {\r\n               getHero(name);\r\n            }}\r\n         >\r\n            <Form>\r\n               <label htmlFor=\"name\">Or find a character by name:</label>\r\n               <div className='findHero-wrapp'>\r\n                  <Field\r\n                     required\r\n                     placeholder='Enter name'\r\n                     id='name'\r\n                     name='name'\r\n                     type='text'>\r\n                  </Field>\r\n                  <button\r\n                     className=\"button button__main\"\r\n                     type='submit'>\r\n                     <div className=\"inner\">FIND</div>\r\n                  </button>\r\n               </div>\r\n               <ErrorMessage component='div' name='name' className='errorMessage' />\r\n               {result}\r\n            </Form>\r\n         </Formik>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default FindHeroByName","import { useState } from 'react'\r\nimport { Helmet } from \"react-helmet\"\r\nimport RandomHero from '../appRandomHero/appRandomHero'\r\nimport Heroeslist from '../appHeroesList/appHeroesList'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\nimport AppHeroInfo from '../appHeroInfo/appHeroInfo'\r\nimport bgImg from '../../resources/img/bg_asset.png'\r\nimport up from '../../resources/img/hummerUp.svg'\r\nimport ScrollUpButton from 'react-scroll-up'\r\nimport FindHeroByName from '../appFindHeroByName/appFindHeroByName'\r\n\r\n\r\nconst MainPage = () => {\r\n   const [selectedChar, setSelectedChar] = useState(null);\r\n   const [firstRenderHeroOnPage, setFirstRenderHeroOnPage] = useState({});\r\n\r\n   const onCharSelected = (id) => {\r\n      setSelectedChar(id)\r\n   }\r\n\r\n   const onHeroLoad = (id) => {\r\n      setFirstRenderHeroOnPage(id)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\"\r\n               content=\"Site about Marvel Universe and its heroes\" />\r\n            <title>Marvel Universe</title>\r\n         </Helmet>\r\n         <ErrorBoundary>\r\n            <RandomHero onHeroLoad={onHeroLoad} />\r\n         </ErrorBoundary>\r\n         <div className=\"heroWrapper\">\r\n            <ErrorBoundary>\r\n               <Heroeslist onCharSelected={onCharSelected} />\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n               <AppHeroInfo charId={selectedChar} randomHero={firstRenderHeroOnPage} />\r\n            </ErrorBoundary>\r\n            <FindHeroByName />\r\n            <img src={bgImg} alt='backGround' className='backGroundImg' />\r\n            <ScrollUpButton showUnder={500}>\r\n               <img src={up} alt='up' className='hummer' />\r\n            </ScrollUpButton>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default MainPage","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(false);\r\n   const [process, setProcess] = useState('waiting')\r\n\r\n   const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n      setLoading(true);\r\n      setProcess('loading')\r\n      setError(false)\r\n      try {\r\n         const response = await fetch(url, { method, body, headers })\r\n         if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n         }\r\n\r\n         const data = await response.json();\r\n         setLoading(false)\r\n         return data\r\n\r\n      } catch (error) {\r\n         setError(error.message)\r\n         setLoading(false)\r\n         setProcess('error')\r\n         throw error\r\n      }\r\n\r\n   }, [])\r\n\r\n   const clearError = useCallback(() => {\r\n      setError(false)\r\n      setProcess('waiting')\r\n   }, []);\r\n\r\n   return { loading, error, request, clearError, process, setProcess }\r\n}\r\n\r\nexport default useHttp","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\r\n   const { loading, error, request, clearError, process, setProcess } = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   const _apiKey = 'apikey=e00523b13d7dc4415650fcb181018a25';\r\n   const _offset = 210;\r\n   const _comicsOffset = 100;\r\n\r\n   const getAllHeroes = async (offset = _offset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_getObjectOfHeroes)\r\n   }\r\n\r\n   const getHeroByName = async (name) => {\r\n      const newHero = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\r\n      return newHero.data.results.map(_getObjectOfHeroes)\r\n   }\r\n\r\n   const getHeroById = async () => {\r\n      const _getRandomId = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\r\n\r\n      const newHero = await request(`${_apiBase}characters/${_getRandomId}?&${_apiKey}`)\r\n\r\n      return _getObjectOfHeroes(newHero.data.results[0])\r\n   }\r\n\r\n   const getHeroWithComicsById = async (id) => {\r\n      const hero = await request(`${_apiBase}characters/${id}?&${_apiKey}`)\r\n\r\n      return _getObjectOfHeroes(hero.data.results[0])\r\n\r\n   }\r\n\r\n   const getAllComics = async (comicsOffset = _comicsOffset) => {\r\n      const comics = await request(`${_apiBase}comics?limit=8&offset=${comicsOffset}&${_apiKey}`)\r\n\r\n      return comics.data.results.map(_getObjectOfComics)\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const comic = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\r\n      return comic.data.results.map(_getObjectOfComics)\r\n   }\r\n\r\n   const _getObjectOfHeroes = (res) => {\r\n\r\n      return {\r\n         name: res.name,\r\n         description: res.description,\r\n         thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n         homepage: res.urls[0].url,\r\n         wiki: res.urls[1].url,\r\n         id: res.id,\r\n         comics: res.comics.items\r\n      }\r\n   }\r\n\r\n   const _getObjectOfComics = (res) => {\r\n\r\n      return {\r\n         thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n         title: res.title,\r\n         description: res.description,\r\n         pageCount: res.pageCount + ' pages',\r\n         price: res.prices[0].price + '$',\r\n         id: res.id,\r\n         language: res.language || 'Language: en-us'\r\n      }\r\n   }\r\n\r\n   return {\r\n      loading,\r\n      error,\r\n      clearError,\r\n      process,\r\n      setProcess,\r\n      request,\r\n      getAllHeroes,\r\n      getHeroById,\r\n      getHeroWithComicsById,\r\n      getAllComics,\r\n      getComic,\r\n      getHeroByName,\r\n   }\r\n}\r\n\r\nexport default useMarvelService; "],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","View","_ref","hero","thumbnail","name","description","homepage","wiki","_jsxs","children","href","props","getHeroById","clearError","process","setProcess","useMarvelService","setHero","useState","useEffect","updateHero","then","res","onHeroLoad","length","slice","setContent","Loading","Error","onClick","shield","mjolnir","heroes","setHeroes","nineHeroLoading","setNineHeroLoading","offset","setOffset","noMoreHeroesInDataFromServer","setNoMoreHeroesInDataFromServer","firstLoadNineHero","setFirstLoadNineHero","animatedHeroes","setAnimatedHeroes","getAllHeroes","onLoadNineNewHeroes","onChangeActivehero","id","updatedHeroes","map","active","renderNineNewHeroes","item","imgStyle","classActive","handleClick","onCharSelected","isAnimated","includes","motion","li","initial","opacity","scale","animate","transition","duration","delay","tabIndex","onKeyDown","event","key","onAnimationComplete","prev","style","newNineHero","prevHeroes","prevOffset","Component","preLoad","arrayLoading","i","push","Skeleton","variant","width","height","animation","content","useMemo","ErrorBoundary","constructor","super","this","state","hasError","errorInfo","componentDidCatch","error","setState","console","log","render","comics","objectFit","firstRenderDone","setFirstRenderDone","getHeroWithComicsById","randomHero","charId","checkAndRender","updateHeroInfo","renderComics","Object","keys","onError","catch","resourceURI","Fragment","justifyContent","display","FindHeroByName","char","setChar","getHeroByName","result","concat","Link","to","Formik","initialValues","validationSchema","Yup","min","required","onSubmit","getHero","Form","htmlFor","Field","placeholder","type","component","MainPage","selectedChar","setSelectedChar","firstRenderHeroOnPage","setFirstRenderHeroOnPage","_Fragment","Helmet","RandomHero","Heroeslist","AppHeroInfo","bgImg","ScrollUpButton","showUnder","up","useHttp","loading","setLoading","setError","request","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","data","json","message","_apiBase","_apiKey","_getObjectOfHeroes","path","extension","urls","items","_getObjectOfComics","title","pageCount","price","prices","language","results","_getRandomId","Math","floor","random","newHero","getAllComics","comicsOffset","getComic"],"sourceRoot":""}