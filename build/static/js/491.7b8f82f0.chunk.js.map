{"version":3,"file":"static/js/491.7b8f82f0.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appRandomHero/appRandomHero.js","components/appHeroesList/appHeroesList.js","components/errorBoundary/ErrorBoundary.js","components/appHeroInfo/appHeroInfo.js","resources/img/hummerUp.svg","components/appFindHeroByName/appFindHeroByName.js","components/pages/MainPage.js"],"sourcesContent":["import errorImg from './giphy.webp'\r\nimport './errorMessage.scss'\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img src={errorImg} alt='error' className='error' />\r\n   )\r\n};\r\n\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react'\r\nimport './appRandomHero.scss'\r\nimport '../../style/button.scss'\r\nimport Loading from '../spiner/Spiner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport mjolnir from '../../resources/img/mjolnir.png'\r\nimport shield from '../../resources/img/shield.png'\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../services/MarvelService'\r\n// import AppHeroInfo from '../appHeroInfo/appHeroInfo'\r\n\r\nconst RandomHero = (props) => {\r\n\r\n   const { loading, error, getHeroById, clearError } = useMarvelService();\r\n\r\n   const [hero, setHero] = useState({});\r\n   // const [loading, setLoading] = useState(true);\r\n\r\n\r\n   useEffect(() => {\r\n      updateHero()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n   const updateHero = () => {\r\n      getHeroById().then(res => {\r\n         props.onHeroLoad(res)\r\n         if (!res.description) {\r\n            res.description = 'There is no data about this character.';\r\n         } else if (res.description && res.description.length > 228) {\r\n            res.description = res.description.slice(0, 228) + '...'\r\n         }\r\n         setHero(res);\r\n         clearError();\r\n      })\r\n   }\r\n\r\n   const errorMessage = error ? <ErrorMessage /> : null;\r\n   const load = loading ? <Loading /> : null;\r\n   const newHero = !(loading || error) ? <View hero={hero} /> : null;\r\n   return (\r\n      <div className=\"randomHero\">\r\n         {errorMessage}\r\n         {load}\r\n         {newHero}\r\n         <div className=\"heroToday\">\r\n            <div>Random character for today! <br />\r\n               Do you want to get to know him better?</div>\r\n            <div>Or choose another one</div>\r\n            <button className=\"button button__main\" onClick={updateHero}>\r\n               <div className=\"inner\">TRY IT</div>\r\n            </button>\r\n            <img src={shield} alt='shield' className='shield'></img>\r\n            <img src={mjolnir} alt='mjolnir' className='mjolnir'></img>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst View = ({ hero }) => {\r\n\r\n   const { thumbnail, name, description, homepage, wiki } = hero\r\n\r\n   return (\r\n      <div className=\"heroBlockInfo\">\r\n         <img src={thumbnail} alt='hero'></img>\r\n         <div className=\"wrapper\">\r\n            <h1 className='heroName'>{name}</h1>\r\n            <div className=\"heroDescription\">{description}</div>\r\n            <div className=\"btns\">\r\n               <a href={homepage} className=\"button button__main\">\r\n                  <div className=\"inner\">HOMEPAGE</div>\r\n               </a>\r\n               <a href={wiki} className=\"button button__secondary\">\r\n                  <div className=\"inner\">WIKI</div>\r\n               </a>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nRandomHero.propTypes = {\r\n   onHeroLoad: PropTypes.func,\r\n}\r\n\r\nexport default RandomHero;","import { useEffect, useState } from 'react'\r\nimport './appHeroesList.scss'\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Loading from '../spiner/Spiner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport PropTypes from 'prop-types'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst Heroeslist = (props) => {\r\n\r\n   const [heroes, setHeroes] = useState([]);\r\n   const [nineHeroLoading, setNineHeroLoading] = useState(false);\r\n   const [offset, setOffset] = useState(210);\r\n   const [noMoreHeroesInDataFromServer, setNoMoreHeroesInDataFromServer] = useState(false);\r\n   const [firstLoadNineHero, setFirstLoadNineHero] = useState(true)\r\n\r\n   const { loading, error, clearError, getAllHeroes } = useMarvelService();\r\n\r\n   useEffect((offset) => {\r\n      getAllHeroes(offset).then(res => {\r\n         const updatedHeroes = res.map(hero => ({\r\n            ...hero, active: false\r\n         }))\r\n         setHeroes(updatedHeroes)\r\n         setFirstLoadNineHero(false)\r\n         clearError();\r\n      })\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n\r\n   const preLoad = () => {\r\n      const arrayLoading = [];\r\n      for (let i = 0; i < 9; i++) {\r\n         arrayLoading.push(<Skeleton variant=\"rectangular\" width={200} height={320} animation=\"wave\" key={i} />)\r\n      }\r\n      return arrayLoading\r\n   }\r\n\r\n   const onChangeActivehero = (id) => {\r\n      const updatedHeroes = heroes.map(hero => {\r\n         return hero.id === id ? { ...hero, active: true } : { ...hero, active: false }\r\n      });\r\n      setHeroes(updatedHeroes)\r\n   }\r\n\r\n   const renderNineNewHeroes = (heroes) => {\r\n      return heroes.map((item, i) => {\r\n         let imgStyle = { 'objectFit': 'cover' };\r\n         const classActive = item.active ? 'hero_item hero_item_selected' : 'hero_item';\r\n         if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = { 'objectFit': 'unset' };\r\n         }\r\n\r\n         const handleClick = () => {\r\n            props.onCharSelected(item.id);\r\n            onChangeActivehero(item.id);\r\n         };\r\n\r\n         const handleKeyDown = (event) => {\r\n            if (event.key === 'Enter' || event.key === ' ') {\r\n               handleClick();\r\n            }\r\n         };\r\n\r\n         return (\r\n            <motion.li\r\n               initial={{ opacity: 0, scale: 0.5 }}\r\n               animate={{ opacity: 1, scale: 1 }}\r\n               transition={{ duration: 0.2, delay: 0.2 }}\r\n               className={classActive}\r\n               key={item.id}\r\n               tabIndex=\"0\"\r\n               onClick={handleClick}\r\n               onKeyDown={handleKeyDown}\r\n            >\r\n               <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n               <div className=\"hero_name\">{item.name}</div>\r\n            </motion.li>\r\n         );\r\n      });\r\n   }\r\n\r\n   const onLoadNineNewHeroes = (offset) => {\r\n      setNineHeroLoading(true)\r\n      getAllHeroes(offset).then(res => {\r\n         if (res.length < 9) {\r\n            setNoMoreHeroesInDataFromServer(true);\r\n         }\r\n         const newNineHero = res.map(hero => ({\r\n            ...hero, active: false\r\n         }))\r\n         setHeroes(prevHeroes => [...prevHeroes, ...newNineHero]);\r\n         setNineHeroLoading(false);\r\n         setOffset(prevOffset => prevOffset + 9)\r\n      });\r\n   }\r\n\r\n   const buttonRender = () => {\r\n      return (\r\n         <button className=\"button button__main button__long\" onClick={() => onLoadNineNewHeroes(offset + 9)}>\r\n            <div className=\"inner\">load more</div>\r\n         </button>\r\n      )\r\n   }\r\n\r\n   const content = renderNineNewHeroes(heroes);\r\n   const load = loading && firstLoadNineHero ? preLoad() : null;\r\n   const errorMessage = error ? <ErrorMessage /> : null;\r\n   let newNineHero = nineHeroLoading ? <Loading /> : buttonRender();\r\n\r\n   if (noMoreHeroesInDataFromServer) {\r\n      newNineHero = null\r\n   }\r\n   return (\r\n      <div className=\"heroes_list\" >\r\n         <ul className=\"heroes_grid\">\r\n            {load}\r\n            {errorMessage}\r\n            {content}\r\n         </ul>\r\n         {newNineHero}\r\n      </div>\r\n   )\r\n\r\n}\r\n\r\nHeroeslist.propTypes = {\r\n   onCharSelected: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Heroeslist;","import { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false, errorInfo: null };\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      this.setState({ hasError: true, errorInfo });\r\n      console.log(error, errorInfo);\r\n   }\r\n\r\n   render() {\r\n      if (this.state.hasError) {\r\n         return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/* eslint-disable array-callback-return */\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Loading from '../spiner/Spiner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport PropTypes from 'prop-types';\r\nimport './appHeroInfo.scss';\r\n\r\nconst AppHeroInfo = (props) => {\r\n\r\n   const [hero, setHero] = useState({});\r\n   const [firstRenderDone, setFirstRenderDone] = useState(false);\r\n   const [loading, setLoading] = useState(true)\r\n   const { error, clearError, getHeroWithComicsById } = useMarvelService();\r\n   const { randomHero, charId } = props;\r\n\r\n   useEffect(() => {\r\n      if (props.randomHero) {\r\n         checkAndRender();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      if (randomHero) {\r\n         checkAndRender();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [randomHero])\r\n\r\n   useEffect(() => {\r\n      if (charId) {\r\n         updateHeroInfo(charId);\r\n         renderComics()\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [charId])\r\n\r\n   const checkAndRender = () => {\r\n      const { randomHero } = props;\r\n      if (!firstRenderDone && randomHero && Object.keys(randomHero).length > 0) { //Обязательно проверять не пустой ли приходит объект randomHero\r\n         setHero({ ...randomHero });\r\n         setFirstRenderDone(true);\r\n         setLoading(false)\r\n      }\r\n   };\r\n\r\n   const onError = () => {\r\n\r\n      return (\r\n         <div className=\"aboutComicsHero\">\r\n            <div className=\"wrapper_error\" >\r\n               <ErrorMessage />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const onLoading = () => {\r\n      return (\r\n         <div className=\"aboutComicsHero\">\r\n            <div className=\"wrapper wrapper_loading\" style={{ justifyContent: 'center', display: 'unset' }}>\r\n               <Loading />\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const updateHeroInfo = (id) => {\r\n      if (!id) {\r\n         return\r\n      }\r\n      setLoading(true)\r\n      getHeroWithComicsById(id).then(item => {\r\n         if (!item.description) {\r\n            item.description = 'There is no data about this character.'\r\n         } else if (item.description && item.description.length > 228) {\r\n            item.description = item.description.slice(0, 228) + '...'\r\n         }\r\n         clearError();\r\n         setHero({ ...item });\r\n         setLoading(false)\r\n\r\n      }).catch(onError)\r\n   }\r\n\r\n   const renderComics = () => {\r\n      const { comics } = hero;\r\n      if (!comics || comics.length === 0) {\r\n         return <li>They are no comics avaible about this hero</li>\r\n      }\r\n      return comics.map((item, i) => {\r\n         if (i > 9) return null;\r\n         return (<a href={item.resourceURI} key={i}>\r\n            <li>{item.name}</li>\r\n         </a>\r\n         )\r\n      })\r\n   }\r\n\r\n   const load = loading ? onLoading() : null;\r\n   const errorMessage = error ? onError() : null;\r\n   const allContent = !(loading || error) ? <View hero={hero} comics={renderComics} /> : null;\r\n   return (\r\n      <Fragment>\r\n         {load}\r\n         {errorMessage}\r\n         {allContent}\r\n      </Fragment>\r\n   )\r\n}\r\n\r\nconst View = ({ hero, comics }) => {\r\n\r\n   const { thumbnail, name, description, homepage, wiki } = hero;\r\n   let imgStyle = { objectFit: 'cover' }\r\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n      imgStyle = { 'objectFit': 'unset' };\r\n   }\r\n\r\n   const content = comics();\r\n\r\n   return (\r\n      <div className=\"aboutComicsHero\">\r\n         <div className=\"wrapper\" >\r\n            <img src={thumbnail} alt='hero' style={imgStyle}></img>\r\n            <h1 className='heroName'>{name}</h1>\r\n            <a href={homepage} className=\"button button__main\">\r\n               <div className=\"inner\">HOMEPAGE</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n               <div className=\"inner\">WIKI</div>\r\n            </a>\r\n         </div>\r\n         <div className=\"heroDescription\">{description}</div>\r\n\r\n         <h2 className=\"comics\">Comics:</h2>\r\n         <ul>\r\n            {content}\r\n         </ul>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nAppHeroInfo.propTypes = {\r\n   charId: PropTypes.number,\r\n   randomHero: PropTypes.object,\r\n}\r\n\r\nexport default AppHeroInfo;","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgHummerUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    id: \"mjolnir\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"11 1 53 1 60 8 60 22 53 29 11 29 4 22 4 8 11 1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.41,30H10.59L3,22.41V7.59L10.59,0H53.41L61,7.59V22.41Zm-42-2H52.59L59,21.59V8.41L52.59,2H11.41L5,8.41V21.59Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"7 9 11 5 11 25 7 21 7 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12,27.41l-6-6V8.59l6-6ZM8,20.59l2,2V7.41l-2,2Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"gray\",\n    points: \"57 9 53 5 53 25 57 21 57 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52,27.41V2.59l6,6V21.41Zm2-20V22.59l2-2V9.41Z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"50 27 39.59 27 37.59 25 26.41 25 24.41 27 14 27 14 25 23.59 25 25.59 23 38.41 23 40.41 25 50 25 50 27\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 8,\n    height: 25,\n    x: 28,\n    y: 29,\n    fill: \"#d21f23\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37,55H27V28H37Zm-8-2h6V30H29Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"gray\",\n    d: \"M36,63H28c-1.38,0-2.27-.91-2-2l2-7h8l2,7C38.27,62.09,37.38,63,36,63Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36,64H28a3.15,3.15,0,0,1-2.53-1.12A2.43,2.43,0,0,1,25,60.76L27.25,53h9.51L39,60.73a2.45,2.45,0,0,1-.43,2.16A3.15,3.15,0,0,1,36,64Zm-7.25-9L27,61.27a.43.43,0,0,0,.08.38A1.21,1.21,0,0,0,28,62h8a1.21,1.21,0,0,0,1-.35.45.45,0,0,0,.07-.41L35.25,55Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 32.5,\n    transform: \"rotate(-31.8 32.146 33.419)\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 41.5,\n    transform: \"rotate(-31.8 32.18 42.428)\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 9.43,\n    height: 2,\n    x: 27.28,\n    y: 49.5,\n    transform: \"rotate(-31.8 32.216 50.438)\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHummerUp);\nexport default __webpack_public_path__ + \"static/media/hummerUp.d29ad872de0e39c47a0cadb891e73fb0.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\r\nimport * as Yup from 'yup'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { Link } from 'react-router-dom'\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './appFindHeroByName.scss'\r\n\r\n\r\nconst FindHeroByName = () => {\r\n   const [char, setChar] = useState(null);\r\n   const [errorMes, setErrorMes] = useState(null);\r\n   const { getHeroByName } = useMarvelService();\r\n\r\n   const getHero = (name) => {\r\n      getHeroByName(name).then(res => {\r\n         setChar(res)\r\n         if (res.length === 0) {\r\n            setErrorMes(<div className='errorMessage'>The character was not found. Check the name and try again</div>)\r\n         }\r\n         console.log(char)\r\n      })\r\n   }\r\n\r\n   const result = !char ? null : char.length > 0 ?\r\n      <div className='newHero'>\r\n         {`There is! Visit ${char[0].name} page?`}\r\n         <Link className=\"button button__secondary\" to={`/${char[0].name}`}>\r\n            <div className=\"inner\">WIKI</div>\r\n         </Link>\r\n      </div> : <div className='errorMessage'>The character was not found. Check the name and try again</div>\r\n\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div className='findHero'>\r\n         <Formik\r\n            initialValues={{ name: '' }}\r\n            validationSchema={Yup.object({\r\n               name: Yup.string()\r\n                  .min(2, 'Minimum 2 symbol')\r\n                  .required('This field is required ')\r\n            })}\r\n            onSubmit={({ name }) => {\r\n               getHero(name);\r\n            }}\r\n         >\r\n            <Form>\r\n               <label htmlFor=\"name\">Or find a character by name:</label>\r\n               <div className='findHero-wrapp'>\r\n                  <Field\r\n                     required\r\n                     placeholder='Enter name'\r\n                     id='name'\r\n                     name='name'\r\n                     type='text'>\r\n                  </Field>\r\n                  <button\r\n                     className=\"button button__main\"\r\n                     type='submit'>\r\n                     <div className=\"inner\">FIND</div>\r\n                  </button>\r\n               </div>\r\n               <ErrorMessage component='div' name='name' className='errorMessage' />\r\n               {result}\r\n            </Form>\r\n         </Formik>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default FindHeroByName","import { useState } from 'react'\r\nimport RandomHero from '../appRandomHero/appRandomHero'\r\nimport Heroeslist from '../appHeroesList/appHeroesList'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\nimport AppHeroInfo from '../appHeroInfo/appHeroInfo'\r\nimport bgImg from '../../resources/img/bg_asset.png'\r\nimport up from '../../resources/img/hummerUp.svg'\r\nimport ScrollUpButton from 'react-scroll-up'\r\nimport FindHeroByName from '../appFindHeroByName/appFindHeroByName'\r\n\r\n\r\nconst MainPage = () => {\r\n   const [selectedChar, setSelectedChar] = useState(null);\r\n   const [firstRenderHeroOnPage, setFirstRenderHeroOnPage] = useState({});\r\n\r\n   const onCharSelected = (id) => {\r\n      setSelectedChar(id)\r\n   }\r\n\r\n   const onHeroLoad = (id) => {\r\n      setFirstRenderHeroOnPage(id)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <ErrorBoundary>\r\n            <RandomHero onHeroLoad={onHeroLoad} />\r\n         </ErrorBoundary>\r\n         <div className=\"heroWrapper\">\r\n            <ErrorBoundary>\r\n               <Heroeslist onCharSelected={onCharSelected} />\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n               <AppHeroInfo charId={selectedChar} randomHero={firstRenderHeroOnPage} />\r\n            </ErrorBoundary>\r\n            <FindHeroByName />\r\n            <img src={bgImg} alt='backGround' className='backGroundImg' />\r\n            <ScrollUpButton showUnder={500}>\r\n               <img src={up} alt='up' className='hummer' />\r\n            </ScrollUpButton>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default MainPage"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","View","_ref","hero","thumbnail","name","description","homepage","wiki","_jsxs","children","href","props","loading","error","getHeroById","clearError","useMarvelService","setHero","useState","useEffect","updateHero","then","res","onHeroLoad","length","slice","errorMessage","load","Loading","newHero","onClick","shield","mjolnir","heroes","setHeroes","nineHeroLoading","setNineHeroLoading","offset","setOffset","noMoreHeroesInDataFromServer","setNoMoreHeroesInDataFromServer","firstLoadNineHero","setFirstLoadNineHero","getAllHeroes","updatedHeroes","map","active","onChangeActivehero","id","content","item","i","imgStyle","classActive","handleClick","onCharSelected","motion","li","initial","opacity","scale","animate","transition","duration","delay","tabIndex","onKeyDown","event","key","style","renderNineNewHeroes","preLoad","arrayLoading","push","Skeleton","variant","width","height","animation","newNineHero","prevHeroes","prevOffset","onLoadNineNewHeroes","ErrorBoundary","Component","constructor","super","this","state","hasError","errorInfo","componentDidCatch","setState","console","log","render","comics","objectFit","firstRenderDone","setFirstRenderDone","setLoading","getHeroWithComicsById","randomHero","charId","checkAndRender","updateHeroInfo","renderComics","Object","keys","onError","catch","resourceURI","justifyContent","display","allContent","Fragment","FindHeroByName","char","setChar","errorMes","setErrorMes","getHeroByName","result","concat","Link","to","Formik","initialValues","validationSchema","Yup","min","required","onSubmit","getHero","Form","htmlFor","Field","placeholder","type","component","MainPage","selectedChar","setSelectedChar","firstRenderHeroOnPage","setFirstRenderHeroOnPage","_Fragment","RandomHero","Heroeslist","AppHeroInfo","bgImg","ScrollUpButton","showUnder","up"],"sourceRoot":""}