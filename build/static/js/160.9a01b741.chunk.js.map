{"version":3,"file":"static/js/160.9a01b741.chunk.js","mappings":"2MAEA,MAOA,EAPqBA,KAEfC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,QAAQC,UAAU,S,kICMhD,MAiEA,EAjEwBC,KACrB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,IAC9B,SAAEC,EAAQ,QAAEC,EAAO,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,MACjDC,EAAAA,EAAAA,YAAU,KACPC,EAAYX,GACZY,GAAa,GAEb,CAACZ,IAEJ,MAAMW,EAAeE,IAClBR,EAASQ,GAAIC,MAAKC,IACfZ,KAAYY,EAAI,IAChBC,OAAOC,IAAQ,MAAM,IAAIC,MAAMD,EAAE,IACpCT,GAAY,EAGTI,EAAcA,KAEdO,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,QAAOsB,SAAA,EACnBD,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CAAAD,SAAA,EACJ1B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,cACRC,QAASrB,EAAMsB,SAClB9B,EAAAA,EAAAA,KAAA,SAAA0B,SAAQlB,EAAMsB,YAEjB9B,EAAAA,EAAAA,KAAA,OAAKC,IAAKO,EAAMuB,UAAW5B,IAAI,MAAMC,UAAU,SAC/CqB,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,UAASsB,SAAA,EACrB1B,EAAAA,EAAAA,KAAA,MAAII,UAAU,QAAOsB,SAAElB,EAAMsB,SAC7B9B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAasB,SAAElB,EAAMwB,eACpChC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,YAAWsB,SAAElB,EAAMyB,aACnCjC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,WAAUsB,SAAElB,EAAM0B,YAClClC,EAAAA,EAAAA,KAAA,QAAMI,UAAU,QAAOsB,SAAElB,EAAM2B,YAElCnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACC,GAAG,UAAUjC,UAAU,QAAOsB,SAAC,mBAkBxCY,EAAWzB,GAAQb,EAAAA,EAAAA,KAACD,EAAAA,EAAY,IAAM,KACtCwC,EAAO3B,GAZPa,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,kBAAiBsB,SAAA,EAC7B1B,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACC,QAAQ,cAAcC,MAAO,IAAKC,OAAQ,IAAKC,UAAU,OAAOxC,UAAU,WACpFJ,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACE,MAAO,IAAKC,OAAQ,MAC9B3C,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACE,MAAO,IAAKC,OAAQ,OAC9B3C,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACE,MAAO,GAAIC,OAAQ,MAC7B3C,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACE,MAAO,IAAKC,OAAQ,MAC9B3C,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CAACE,MAAO,GAAIC,OAAQ,QAMI,KACpCE,GAAaN,IAAS1B,GAASiC,OAAOC,KAAKvC,GAAOwC,OAAS,EAAK9B,IAAgB,KACtF,OACGO,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAvB,SAAA,EACG1B,EAAAA,EAAAA,KAACkD,EAAAA,EAAY,IACZZ,EACAC,EACAM,IACD,C","sources":["components/errorMessage/ErrorMessage.js","components/pages/SingleComicPage.js"],"sourcesContent":["import errorImg from './giphy.webp'\r\nimport './errorMessage.scss'\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img src={errorImg} alt='error' className='error' />\r\n   )\r\n};\r\n\r\n\r\nexport default ErrorMessage;","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport ComicsHeader from '../appHeaderComics/appHeaderComics'\r\nimport useMarvelService from \"../../services/MarvelService\"\r\nimport './SingleComicPage.scss'\r\n\r\n\r\nconst SingleComicPage = () => {\r\n   const { comicId } = useParams();\r\n   const [comic, setComic] = useState({});\r\n   const { getComic, loading, error, clearError } = useMarvelService();\r\n   useEffect(() => {\r\n      getNewComic(comicId)\r\n      renderComic()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [comicId])\r\n\r\n   const getNewComic = (id) => {\r\n      getComic(id).then(res => {\r\n         setComic(...res)\r\n      }).catch((e) => { throw new Error(e) })\r\n      clearError();\r\n   }\r\n\r\n   const renderComic = () => {\r\n      return (\r\n         <div className='comic'>\r\n            <Helmet>\r\n               <meta name=\"description\"\r\n                  content={comic.title} />\r\n               <title>{comic.title}</title>\r\n            </Helmet>\r\n            <img src={comic.thumbnail} alt=\"img\" className='img' />\r\n            <div className='wrapper'>\r\n               <h2 className='title'>{comic.title}</h2>\r\n               <div className='description'>{comic.description}</div>\r\n               <span className='pageCount'>{comic.pageCount}</span>\r\n               <span className='language'>{comic.language}</span>\r\n               <span className='price'>{comic.price}</span>\r\n            </div>\r\n            <Link to='/comics' className='toAll'>Back to all</Link>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const renderSkeleton = () => {\r\n      return (\r\n         <div className='sketelonWrapper'>\r\n            <Skeleton variant=\"rectangular\" width={300} height={460} animation=\"wave\" className='photo' />\r\n            <Skeleton width={300} height={30} />\r\n            <Skeleton width={550} height={150} />\r\n            <Skeleton width={75} height={30} />\r\n            <Skeleton width={120} height={30} />\r\n            <Skeleton width={60} height={30} />\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const newError = error ? <ErrorMessage /> : null;\r\n   const load = loading ? renderSkeleton() : null;\r\n   const newComic = (!load && !error && Object.keys(comic).length > 0) ? renderComic() : null;\r\n   return (\r\n      <>\r\n         <ComicsHeader />\r\n         {newError}\r\n         {load}\r\n         {newComic}\r\n      </>\r\n   )\r\n\r\n}\r\n\r\nexport default SingleComicPage"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","SingleComicPage","comicId","useParams","comic","setComic","useState","getComic","loading","error","clearError","useMarvelService","useEffect","getNewComic","renderComic","id","then","res","catch","e","Error","_jsxs","children","Helmet","name","content","title","thumbnail","description","pageCount","language","price","Link","to","newError","load","Skeleton","variant","width","height","animation","newComic","Object","keys","length","_Fragment","ComicsHeader"],"sourceRoot":""}