{"version":3,"file":"static/js/959.180ea2e4.chunk.js","mappings":"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","sources":["components/appComicsList/appComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useMarvelService from \"../../services/MarvelService\"\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Loading from '../spiner/Spiner'\r\nimport './appComicsList.scss'\r\n\r\nconst ComicsList = (props) => {\r\n   const [comics, setComics] = useState([]);\r\n   const [newOffset, setNewOffset] = useState(0);\r\n   const [firstLoading, setFirstLoading] = useState(true)\r\n   const [noMoreHeroesInDataFromServer, setNoMoreHeroesInDataFromServer] = useState(false);\r\n   const { getAllComics, loading, error, clearError } = useMarvelService();\r\n\r\n   useEffect(() => {\r\n      getAllComics().then(res =>\r\n         setComics(prevComics => [...prevComics, ...res.map(comic => ({ ...comic, active: false }))]))\r\n         .finally(() => {\r\n            setFirstLoading(false)\r\n         })\r\n      renderComics()\r\n      clearError()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n\r\n   const getNewComics = (newOffset) => {\r\n      getAllComics(newOffset).then(res => {\r\n         if (res.length < 8) {\r\n            setNoMoreHeroesInDataFromServer(true);\r\n         }\r\n         setComics(prevComics => [...prevComics, ...res.map(comic => ({ ...comic, active: false }))])\r\n      })\r\n      setNewOffset(prevOffset => prevOffset + 8)\r\n   }\r\n\r\n   const preLoadSkeleton = () => {\r\n      const arraySkeleton = [];\r\n      for (let i = 0; i < 8; i++) {\r\n         arraySkeleton.push(<li key={i}>\r\n            <Skeleton variant=\"rectangular\" width={225} height={346} animation=\"wave\" />\r\n            <Skeleton height={36} animation=\"wave\" />\r\n            <Skeleton width=\"30%\" animation=\"wave\" />\r\n         </li>)\r\n      }\r\n      return arraySkeleton;\r\n   }\r\n\r\n   const onChangeActivehero = (id) => {\r\n      const updatedComics = comics.map(hero => {\r\n         return hero.id === id ? { ...hero, active: true } : { ...hero, active: false }\r\n      });\r\n      setComics(updatedComics)\r\n   }\r\n\r\n   const renderComics = () => {\r\n\r\n      return comics.map(item => {\r\n         const classActive = item.active ? 'selected' : null;\r\n         let imgStyle = { 'objectFit': 'cover' };\r\n\r\n         const handleClick = () => {\r\n            // props.onCharSelected(item.id);\r\n            onChangeActivehero(item.id);\r\n         };\r\n         if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = { 'objectFit': 'unset' };\r\n         }\r\n\r\n         const handleKeyDown = (event) => {\r\n            if (event.key === 'Enter' || event.key === ' ') {\r\n               handleClick();\r\n            }\r\n         };\r\n\r\n         return (\r\n            <Link\r\n               to={`/comics/${item.id}`}\r\n               key={item.id}\r\n               tabIndex={0}\r\n               className={classActive}\r\n               onClick={handleClick}\r\n               onKeyDown={handleKeyDown}>\r\n               <img src={item.thumbnail} style={imgStyle} alt=\"comics\" />\r\n               <div className='comicsTitle'>{item.title}</div>\r\n               <div className='price'>{item.price}</div>\r\n            </Link>\r\n         )\r\n      })\r\n   }\r\n\r\n   const buttonRender = () => {\r\n      return (\r\n         <button className=\"button button__main button__long\" onClick={() => getNewComics(newOffset + 8)}>\r\n            <div className=\"inner\">load more</div>\r\n         </button>\r\n      )\r\n   }\r\n\r\n\r\n   const load = firstLoading ? preLoadSkeleton() : null;\r\n   const errorMessage = error ? <ErrorMessage /> : null;\r\n   const content = renderComics();\r\n   let button = loading && !firstLoading ? <Loading /> : buttonRender();\r\n\r\n   if (noMoreHeroesInDataFromServer) {\r\n      button = null\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <ul className='comicsWrapper'>\r\n            {load}\r\n            {errorMessage}\r\n            {content}\r\n         </ul>\r\n         {button}\r\n      </div>\r\n   )\r\n\r\n}\r\n\r\nexport default ComicsList;","import ComicsHeader from '../appHeaderComics/appHeaderComics'\r\nimport ComicsList from '../appComicsList/appComicsList'\r\n\r\nconst ComicsPage = () => {\r\n\r\n   return (\r\n      <>\r\n         <ComicsHeader />\r\n         <ComicsList />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage"],"names":["props","comics","setComics","useState","newOffset","setNewOffset","firstLoading","setFirstLoading","noMoreHeroesInDataFromServer","setNoMoreHeroesInDataFromServer","getAllComics","loading","error","clearError","useMarvelService","useEffect","then","res","prevComics","map","comic","active","finally","renderComics","item","classActive","imgStyle","handleClick","id","updatedComics","hero","onChangeActivehero","thumbnail","_jsxs","Link","to","concat","tabIndex","className","onClick","onKeyDown","event","key","children","_jsx","src","style","alt","title","price","load","preLoadSkeleton","arraySkeleton","i","push","Skeleton","variant","width","height","animation","errorMessage","ErrorMessage","content","button","Loading","length","prevOffset","getNewComics","ComicsPage","_Fragment","ComicsHeader","ComicsList"],"sourceRoot":""}